name: CI Pipeline

on:
  push:
    branches: [ main, CI-pipeline ]
  pull_request:
    branches: [ main, CI-pipeline ]

jobs:
  # Backend Tests and Build
  backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run backend unit tests
      working-directory: ./backend
      run: npm test

    - name: Run backend integration tests
      working-directory: ./backend
      run: npm run test:integration

    - name: Generate test coverage
      working-directory: ./backend
      run: npm run test:coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage/lcov.info
        flags: backend

    - name: Build backend Docker image
      run: docker build -t todo-backend:${{ github.sha }} ./backend

  # Frontend Tests and Build
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run frontend unit tests
      working-directory: ./frontend
      run: npm test -- --watchAll=false

    - name: Generate test coverage
      working-directory: ./frontend
      run: npm run test:coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: ./frontend/coverage/lcov.info
        flags: frontend

    - name: Build frontend for production
      working-directory: ./frontend
      run: npm run build